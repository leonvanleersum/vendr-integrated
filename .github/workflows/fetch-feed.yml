name: Update feeds (default + realtors)

on:
  schedule:
    - cron: "0 * * * *"   # elke uur (UTC)
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: update-feeds
  cancel-in-progress: false

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Ensure data directory exists
        run: |
          set -e
          mkdir -p data

      - name: Read realtor IDs (from .github/realtors.txt if present)
        id: ids
        run: |
          set -e
          if [ -f ".github/realtors.txt" ]; then
            IDS="$(grep -E '^[a-f0-9-]{36}$' .github/realtors.txt | tr -d '\r' | tr '\n' ' ' | xargs || true)"
          else
            IDS="389d4412-0814-4f11-b01c-d5a4b0355e50 db92a0e3-1ee8-4c9e-851c-3b54864ff0d0 146f9e18-0f8d-4301-a43e-9ca578c43692 bc163571-2dd9-405f-9bc0-19047f382f62 514efdd1-e8b7-4ca7-975b-22cc4b187f81"
          fi
          echo "ids=${IDS}" >> "$GITHUB_OUTPUT"
          echo "Using realtor IDs: ${IDS}"

      - name: Fetch default feed (non-fatal)
        id: defaultfeed
        run: |
          set -e
          URL="https://vendr.nl/feed"
          TMP="$(mktemp)"
          if curl -fsSL "$URL" -H "Accept: application/json" -o "$TMP"; then
            mv "$TMP" "data/feed.json"
            echo "ok=true" >> "$GITHUB_OUTPUT"
            echo "Default feed written to data/feed.json"
          else
            echo "WARNING: could not fetch $URL" >&2
            echo "ok=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Fetch realtor feeds (non-fatal per ID)
        id: realtorfeeds
        run: |
          set -e
          OKCOUNT=0
          for ID in ${{ steps.ids.outputs.ids }}; do
            [ -n "$ID" ] || continue
            URL="https://vendr.nl/realtor/${ID}/feed"
            TARGET="data/realtor-${ID}.json"
            TMP="$(mktemp)"
            echo "Fetching ${URL} ..."
            if curl -fsSL "$URL" -H "Accept: application/json" -o "$TMP"; then
              OKCOUNT=$((OKCOUNT+1))
              if [ -f "$TARGET" ] && cmp -s "$TMP" "$TARGET"; then
                echo "No change for $TARGET"
                rm -f "$TMP"
              else
                mv "$TMP" "$TARGET"
                echo "Updated: $TARGET"
              fi
            else
              echo "WARNING: could not fetch ${URL}" >&2
              rm -f "$TMP" || true
            fi
          done
          echo "okcount=${OKCOUNT}" >> "$GITHUB_OUTPUT"
          echo "Fetched OK for ${OKCOUNT} realtor IDs"

      - name: Always write data/index.json
        run: |
          set -e
          NOW="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          DEFAULT=""
          if [ -f "data/feed.json" ]; then DEFAULT="data/feed.json"; fi
          FILES=()
          for f in data/realtor-*.json; do
            [ -e "$f" ] || continue
            FILES+=("$f")
          done
          {
            echo '{'
            echo '  "generated_at": "'${NOW}'",'
            if [ -n "$DEFAULT" ]; then
              echo '  "default_feed": "'$DEFAULT'",'
            else
              echo '  "default_feed": null,'
            fi
            echo '  "realtor_files": ['
            for i in "${!FILES[@]}"; do
              if [ "$i" -gt 0 ]; then echo ','; fi
              printf '    "%s"' "${FILES[$i]}"
            done
            echo ''
            echo '  ]'
            echo '}'
          } > "data/index.json"
          echo "Wrote data/index.json"

      - name: Show data dir after run
        run: |
          set -e
          ls -lah data || true
          echo "---- index.json (first 200 chars) ----"
          head -c 200 data/index.json || true
          echo

      - name: Commit & push changes
        run: |
          set -e
          if [[ -n "$(git status --porcelain data/)" ]]; then
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git add data/*
            git commit -m "Update feeds [skip ci]"
            git push
            echo "Changes committed & pushed."
          else
            echo "No changes to commit."
          fi
